====
    Copyright (C) 2010 Nicolas Vahlas <nico@vahlas.eu>

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
====

========================================================
Implementation status for: 5. Core Schema Definition, draft-02
========================================================

5.1  type 				simple      OK  union	OK
5.2  properties 			OK
5.3  items				simple      OK	tuple	OK
5.4  optional				OK
5.5  additionalProperties               OK
5.6  requires				name        OK	schema	OK  array OK
5.7  minimum				OK
5.8  maximum				OK
5.9  minimumCanEqual                    OK
5.10 maximumCanEqual                    OK
5.11 minItems				OK
5.12 maxItems				OK
5.13 uniqueItems			OK
5.14 pattern				OK
5.15 maxLength				OK
5.16 minLength				OK
5.17 enum				OK
5.18 title				NOTHING
5.19 description			NOTHING
5.20 format				date-time   OK  date    OK  others  TODO
5.21 contentEncoding                    TODO
5.22 default				TODO
5.23 divisibleBy			OK
5.24 disallow				OK
5.25 extends				TODO
X.XX schema				TODO
X.XX $ref				IN PG (very experimental implementation)

==========================================================
Remaining TODO's
==========================================================

Extract error messages 						  TODO
Make sure all the code is commented 				  TODO
Finish 5.21, 5.22 and 5.25					  TODO

==========================================================
QUESTIONS
==========================================================
"default": does it means that if no value is provided for
a property we should validate against the default value ?

"divisibleBy": has sense only for integers => NO TODO

"format": should be handled just like "type" (ie with constants class and a factory)
"format": The draft-02 is not very clear on how to define a 'custom' format URL